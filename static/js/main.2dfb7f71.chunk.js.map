{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","App.tsx","index.tsx"],"names":["module","exports","ContactForm","state","name","number","handleAddInput","i","e","RegExp","test","currentTarget","value","setState","handleSubmit","preventDefault","props","findName","alert","formSubmit","id","uuidv4","reset","className","S","contactsForm","onSubmit","this","TextField","label","variant","onChange","title","required","type","Button","btn","Component","ContactList","list","filterValue","deleteContact","map","toLowerCase","includes","row","text","onClick","Filter","handleChangeFilter","input","App","contacts","filter","str","find","item","formSubmitHandler","data","prevState","changeFilter","localData","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dfb7f71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ContactList_row__3X2Co\",\"text\":\"ContactList_text__LNSGf\",\"btn\":\"ContactList_btn__2IDaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__wvixZ\",\"input\":\"ContactForm_input__Ew09t\",\"caption\":\"ContactForm_caption__2UNz5\",\"btn\":\"ContactForm_btn__3aeHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3pQNE\",\"title\":\"App_title__bEcWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Filter_caption__1Y_Dd\",\"input\":\"Filter_input__2y1lb\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport S from \"./ContactForm.module.css\";\r\n// import Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\ninterface StateType {\r\n  name?: string;\r\n  number?: string;\r\n}\r\n\r\ninterface PropsType {\r\n  formSubmit: any;\r\n  findName: any;\r\n}\r\n\r\nclass ContactForm extends Component<PropsType> {\r\n  state: StateType = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleAddInput = (i: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const b = new RegExp(i);\r\n    if (b.test(e.currentTarget.value)) {\r\n      this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (this.props.findName(this.state.name)) {\r\n      alert(this.state.name + \" is already in contacts\");\r\n      return;\r\n    }\r\n    this.props.formSubmit({ id: uuidv4(), ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={S.contactsForm} onSubmit={this.handleSubmit}>\r\n        <TextField\r\n          label=\"Name\"\r\n          variant=\"standard\"\r\n          id=\"component-simple\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleAddInput(\"^$|^[$a-zA-Zа-яА-Я -']*$\")}\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Phone number\"\r\n          variant=\"standard\"\r\n          id=\"component-simple\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleAddInput(\"^$|^\\\\+|^\\\\d[\\\\d\\\\s-.]*$\")}\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <Button type=\"submit\" className={S.btn} variant=\"contained\">\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport S from \"./ContactList.module.css\";\r\ntype listType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\ninterface PropsType {\r\n  list: listType[];\r\n  filterValue: string;\r\n  deleteContact: any;\r\n}\r\n\r\nconst ContactList: React.FC<PropsType> = ({\r\n  list,\r\n  filterValue,\r\n  deleteContact,\r\n}) => {\r\n  return (\r\n    <ul className={S.list}>\r\n      {list.map(\r\n        ({ id, name, number }) =>\r\n          name.toLowerCase().includes(filterValue.toLowerCase()) && (\r\n            <li key={id} className={S.row}>\r\n              <p className={S.text}>\r\n                {name}: {number}\r\n              </p>\r\n              <button className={S.btn} onClick={() => deleteContact(id)}>\r\n                Удалить\r\n              </button>\r\n            </li>\r\n          )\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport S from \"./Filter.module.css\";\r\n\r\ninterface PropsType {\r\n  filterValue: string;\r\n  handleChangeFilter: any;\r\n}\r\n\r\nconst Filter: React.FC<PropsType> = ({ filterValue, handleChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      {/* <label className={S.caption}>Find contacts by name</label> */}\r\n      <TextField\r\n        label=\"Find contacts by name\"\r\n        variant=\"standard\"\r\n        id=\"component-simple\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        className={S.input}\r\n        value={filterValue}\r\n        onChange={handleChangeFilter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport S from \"./App.module.css\";\r\n\r\ntype contactsType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\ninterface StateType {\r\n  contacts: contactsType[];\r\n  filter: string;\r\n}\r\n\r\nclass App extends Component {\r\n  state: StateType = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  findName = (str: string): boolean => {\r\n    return this.state.contacts.find((item) =>\r\n      item.name.toLowerCase().includes(str.toLowerCase())\r\n    )\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  formSubmitHandler = (data: StateType) => {\r\n    this.setState((prevState: StateType) => ({\r\n      contacts: [...prevState.contacts, data],\r\n    }));\r\n  };\r\n\r\n  changeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  deleteContact = (id: string): void => {\r\n    this.setState((prevState: StateType) => ({\r\n      contacts: prevState.contacts.filter((item) => item.id !== id),\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localData = localStorage.getItem(\"contacts\");\r\n    if (localData) {\r\n      this.setState({ contacts: JSON.parse(localData) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: StateType, prevState: StateType) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={S.container}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          formSubmit={this.formSubmitHandler}\r\n          findName={this.findName}\r\n        />\r\n\r\n        <h2 className={S.title}>Contacts</h2>\r\n        <Filter\r\n          filterValue={this.state.filter}\r\n          handleChangeFilter={this.changeFilter}\r\n        />\r\n        <ContactList\r\n          list={this.state.contacts}\r\n          filterValue={this.state.filter}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}