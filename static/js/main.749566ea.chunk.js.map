{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Modal/Modal.module.css","components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","components/Modal/Modal.tsx","components/ContactForm/ContactForm.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","App.tsx","index.tsx"],"names":["module","exports","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","className","S","backdrop","onClick","content","children","Component","ContactForm","state","name","number","showModal","handleAddInput","i","RegExp","test","value","setState","handleSubmit","preventDefault","findName","toggleModal","formSubmit","id","uuidv4","reset","Alert","severity","AlertTitle","contactsForm","onSubmit","TextField","label","variant","onChange","title","required","type","Button","btn","ContactList","list","filterValue","deleteContact","map","toLowerCase","includes","row","text","Filter","handleChangeFilter","input","App","contacts","filter","str","find","item","formSubmitHandler","data","prevState","changeFilter","localData","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","container","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.749566ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ContactList_row__3X2Co\",\"text\":\"ContactList_text__LNSGf\",\"btn\":\"ContactList_btn__2IDaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1CANR\",\"content\":\"Modal_content__QjeMF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__wvixZ\",\"input\":\"ContactForm_input__Ew09t\",\"caption\":\"ContactForm_caption__2UNz5\",\"btn\":\"ContactForm_btn__3aeHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3pQNE\",\"title\":\"App_title__bEcWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Filter_caption__1Y_Dd\",\"input\":\"Filter_input__2y1lb\"};","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport S from \"./Modal.module.css\";\r\n\r\nconst modalRoot: any = document.querySelector(\"#modal-root\");\r\ninterface PropsType {\r\n  onClose: any;\r\n}\r\nexport default class Modal extends Component<PropsType> {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e: KeyboardEvent) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (e: React.MouseEvent) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={S.backdrop} onClick={this.handleBackdropClick}>\r\n        <div className={S.content}>{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport S from \"./ContactForm.module.css\";\r\n// import Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\n\r\ninterface StateType {\r\n  name?: string;\r\n  number?: string;\r\n  showModal: boolean;\r\n}\r\n\r\ninterface PropsType {\r\n  formSubmit: any;\r\n  findName: any;\r\n}\r\n\r\nclass ContactForm extends Component<PropsType> {\r\n  state: StateType = {\r\n    name: \"\",\r\n    number: \"\",\r\n    showModal: false,\r\n  };\r\n\r\n  handleAddInput = (i: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const b = new RegExp(i);\r\n    if (b.test(e.currentTarget.value)) {\r\n      this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (this.props.findName(this.state.name)) {\r\n      this.toggleModal();\r\n      return;\r\n    }\r\n    this.props.formSubmit({ id: uuidv4(), ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  toggleModal = (): void => {\r\n    this.setState(({ showModal }: StateType) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <Alert severity=\"warning\" onClose={this.toggleModal}>\r\n              <AlertTitle>Warning</AlertTitle>\r\n              {this.state.name} is already in contacts\r\n            </Alert>\r\n          </Modal>\r\n        )}\r\n        <form className={S.contactsForm} onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            label=\"Name\"\r\n            variant=\"standard\"\r\n            id=\"component-simple\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleAddInput(\"^$|^[$a-zA-Zа-яА-Я -']*$\")}\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Phone number\"\r\n            variant=\"standard\"\r\n            id=\"component-simple\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleAddInput(\"^$|^\\\\+|^\\\\d[\\\\d\\\\s-.]*$\")}\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n\r\n          <Button type=\"submit\" className={S.btn} variant=\"contained\">\r\n            Add contact\r\n          </Button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport S from \"./ContactList.module.css\";\r\ntype listType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\ninterface PropsType {\r\n  list: listType[];\r\n  filterValue: string;\r\n  deleteContact: any;\r\n}\r\n\r\nconst ContactList: React.FC<PropsType> = ({\r\n  list,\r\n  filterValue,\r\n  deleteContact,\r\n}) => {\r\n  return (\r\n    <ul className={S.list}>\r\n      {list.map(\r\n        ({ id, name, number }) =>\r\n          name.toLowerCase().includes(filterValue.toLowerCase()) && (\r\n            <li key={id} className={S.row}>\r\n              <p className={S.text}>\r\n                {name}: {number}\r\n              </p>\r\n              <button className={S.btn} onClick={() => deleteContact(id)}>\r\n                Удалить\r\n              </button>\r\n            </li>\r\n          )\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport S from \"./Filter.module.css\";\r\n\r\ninterface PropsType {\r\n  filterValue: string;\r\n  handleChangeFilter: any;\r\n}\r\n\r\nconst Filter: React.FC<PropsType> = ({ filterValue, handleChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      {/* <label className={S.caption}>Find contacts by name</label> */}\r\n      <TextField\r\n        label=\"Find contacts by name\"\r\n        variant=\"standard\"\r\n        id=\"component-simple\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        className={S.input}\r\n        value={filterValue}\r\n        onChange={handleChangeFilter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport Modal from \"./components/Modal\";\r\nimport S from \"./App.module.css\";\r\n\r\ntype contactsType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\ninterface StateType {\r\n  contacts: contactsType[];\r\n  filter: string;\r\n}\r\n\r\nclass App extends Component {\r\n  state: StateType = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const localData = localStorage.getItem(\"contacts\");\r\n    if (localData) {\r\n      this.setState({ contacts: JSON.parse(localData) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: StateType, prevState: StateType) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  findName = (str: string): boolean => {\r\n    return this.state.contacts.find((item) =>\r\n      item.name.toLowerCase().includes(str.toLowerCase())\r\n    )\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  formSubmitHandler = (data: StateType) => {\r\n    this.setState((prevState: StateType) => ({\r\n      contacts: [...prevState.contacts, data],\r\n    }));\r\n  };\r\n\r\n  changeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  deleteContact = (id: string): void => {\r\n    this.setState((prevState: StateType) => ({\r\n      contacts: prevState.contacts.filter((item) => item.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    return (\r\n      <div className={S.container}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          formSubmit={this.formSubmitHandler}\r\n          findName={this.findName}\r\n        />\r\n        <h2 className={S.title}>Contacts</h2>\r\n        <Filter filterValue={filter} handleChangeFilter={this.changeFilter} />\r\n        <ContactList\r\n          list={contacts}\r\n          filterValue={filter}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}